// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface ICategoryFields {
  /** Name */
  name: string;

  /** Slug */
  slug: string;
}

export interface ICategory extends Entry<ICategoryFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "category";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComponentAuthorFields {
  /** Internal name */
  internalName: string;

  /** Name */
  name: string;

  /** Avatar */
  avatar?: Asset | undefined;
}

/** To have author-related properties */

export interface IComponentAuthor extends Entry<IComponentAuthorFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "componentAuthor";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComponentRichImageFields {
  /** Internal name */
  internalName: string;

  /** Image */
  image: Asset;

  /** Caption */
  caption?: string | undefined;

  /** Full width */
  fullWidth?: boolean | undefined;
}

/** To describe an image used in rich text fields */

export interface IComponentRichImage extends Entry<IComponentRichImageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "componentRichImage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComponentSeoFields {
  /** Internal name */
  internalName: string;

  /** Page title */
  pageTitle: string;

  /** Page description */
  pageDescription?: string | undefined;

  /** Canonical URL */
  canonicalUrl?: string | undefined;

  /** nofollow */
  nofollow: boolean;

  /** noindex */
  noindex: boolean;

  /** Share images */
  shareImages?: Asset[] | undefined;
}

/** To have SEO-related properties to the pages we render */

export interface IComponentSeo extends Entry<IComponentSeoFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "componentSeo";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IImageFields {
  /** Name */
  name: string;

  /** file */
  file: Record<string, any>;

  /** caption */
  caption?: Document | undefined;
}

/** Cloudinary image component */

export interface IImage extends Entry<IImageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "image";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageFields {
  /** Title */
  title: string;

  /** slug */
  slug: string;

  /** Meta description */
  metaDescription: string;

  /** Featured image */
  featuredImage?: Asset | undefined;

  /** Content */
  content: Document;
}

export interface IPage extends Entry<IPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "page";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageBlogPostFields {
  /** Internal name */
  internalName: string;

  /** SEO fields */
  seoFields?: IComponentSeo | undefined;

  /** Slug */
  slug: string;

  /** Author */
  author?: IComponentAuthor | undefined;

  /** Published date */
  publishedDate: string;

  /** Title */
  title: string;

  /** Subtitle */
  shortDescription?: string | undefined;

  /** Featured image */
  featuredImage: Asset;

  /** Content */
  content: Document;

  /** Related blog posts */
  relatedBlogPosts?: IPageBlogPost[] | undefined;
}

/** To create individual blog posts */

export interface IPageBlogPost extends Entry<IPageBlogPostFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "pageBlogPost";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageLandingFields {
  /** Internal name */
  internalName: string;

  /** SEO fields */
  seoFields?: IComponentSeo | undefined;

  /** Featured blog post */
  featuredBlogPost?: IPageBlogPost | undefined;
}

/** To have an entry point for the app (e.g. Homepage) */

export interface IPageLanding extends Entry<IPageLandingFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "pageLanding";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPostFields {
  /** Featured image */
  featuredImage?: Record<string, any> | undefined;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Meta description */
  metaDescription: string;

  /** Publish date */
  publishDate: string;

  /** Category */
  category?: ICategory | undefined;

  /** Tags */
  tags?: ITag[] | undefined;

  /** Allow comments */
  allowComments?: boolean | undefined;

  /** Content */
  content?: Document | undefined;
}

/** Single blog post */

export interface IPost extends Entry<IPostFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "post";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITagFields {
  /** Name */
  name: string;

  /** Slug */
  slug: string;
}

export interface ITag extends Entry<ITagFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "tag";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export type CONTENT_TYPE =
  | "category"
  | "componentAuthor"
  | "componentRichImage"
  | "componentSeo"
  | "image"
  | "page"
  | "pageBlogPost"
  | "pageLanding"
  | "post"
  | "tag";

export type IEntry =
  | ICategory
  | IComponentAuthor
  | IComponentRichImage
  | IComponentSeo
  | IImage
  | IPage
  | IPageBlogPost
  | IPageLanding
  | IPost
  | ITag;

export type LOCALE_CODE = "fi";

export type CONTENTFUL_DEFAULT_LOCALE_CODE = "fi";
